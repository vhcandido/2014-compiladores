Terminals unused in grammar

   ATTR


Grammar

    0 $accept: program $end

    1 program: MAIN '(' ')' '{' commands '}' program_end
    2        | error

    3 program_end: %empty
    4            | program_end1

    5 program_end1: ID '(' ')' '{' commands '}' program_end1
    6             | error

    7 commands: %empty
    8         | commands1

    9 commands1: '{' commands '}'
   10          | commands1 command
   11          | command
   12          | ';'

   13 command: cmd ';'
   14        | DTYPE declarations ';'
   15        | if_stmt
   16        | for_stmt
   17        | while_stmt
   18        | dowhile_stmt

   19 cmd: PRINT STRING
   20    | BREAK
   21    | RETURN
   22    | attribution
   23    | error

   24 if_stmt: IF '(' fsecond ')' '{' commands '}' else_stmt

   25 else_stmt: %empty
   26          | ELSE '{' commands '}'

   27 for_stmt: FOR '(' ffirst ';' fsecond ';' fthird ')' '{' commands '}'

   28 ffirst: %empty
   29       | declarations

   30 fsecond: %empty
   31        | binlop

   32 fthird: %empty
   33       | fthird_body

   34 fthird_body: cmd ',' fthird_body
   35            | cmd

   36 while_stmt: WHILE '(' fsecond ')' '{' commands '}'

   37 dowhile_stmt: DO '{' commands '}' WHILE '(' fsecond ')' ';'

   38 declarations: declarations ',' decl
   39             | decl

   40 decl: ID
   41     | attribution
   42     | error

   43 attribution: ID '=' expr

   44 expr: binlop
   45     | binmop
   46     | '(' expr ')'
   47     | UNLOP expr
   48     | ID
   49     | NUMBER
   50     | error

   51 binlop: expr BINLOP expr

   52 binmop: expr MATHOP expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 1 5 24 27 36 37 46
')' (41) 1 5 24 27 36 37 46
',' (44) 34 38
';' (59) 12 13 14 27 37
'=' (61) 43
'{' (123) 1 5 9 24 26 27 36 37
'}' (125) 1 5 9 24 26 27 36 37
error (256) 2 6 23 42 50
MAIN (258) 1
IF (259) 24
ELSE (260) 26
DO (261) 37
WHILE (262) 36 37
FOR (263) 27
BREAK (264) 20
PRINT (265) 19
RETURN (266) 21
DTYPE (267) 14
STRING (268) 19
NUMBER (269) 49
ID (270) 5 40 43 48
UNLOP (271) 47
BINLOP (272) 51
MATHOP (273) 52
ATTR (274)


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
program (28)
    on left: 1 2, on right: 0
program_end (29)
    on left: 3 4, on right: 1
program_end1 (30)
    on left: 5 6, on right: 4 5
commands (31)
    on left: 7 8, on right: 1 5 9 24 26 27 36 37
commands1 (32)
    on left: 9 10 11 12, on right: 8 10
command (33)
    on left: 13 14 15 16 17 18, on right: 10 11
cmd (34)
    on left: 19 20 21 22 23, on right: 13 34 35
if_stmt (35)
    on left: 24, on right: 15
else_stmt (36)
    on left: 25 26, on right: 24
for_stmt (37)
    on left: 27, on right: 16
ffirst (38)
    on left: 28 29, on right: 27
fsecond (39)
    on left: 30 31, on right: 24 27 36 37
fthird (40)
    on left: 32 33, on right: 27
fthird_body (41)
    on left: 34 35, on right: 33 34
while_stmt (42)
    on left: 36, on right: 17
dowhile_stmt (43)
    on left: 37, on right: 18
declarations (44)
    on left: 38 39, on right: 14 29 38
decl (45)
    on left: 40 41 42, on right: 38 39
attribution (46)
    on left: 43, on right: 22 41
expr (47)
    on left: 44 45 46 47 48 49 50, on right: 43 46 47 51 52
binlop (48)
    on left: 51, on right: 31 44
binmop (49)
    on left: 52, on right: 45


State 0

    0 $accept: . program $end

    error  shift, and go to state 1
    MAIN   shift, and go to state 2

    program  go to state 3


State 1

    2 program: error .

    $default  reduce using rule 2 (program)


State 2

    1 program: MAIN . '(' ')' '{' commands '}' program_end

    '('  shift, and go to state 4


State 3

    0 $accept: program . $end

    $end  shift, and go to state 5


State 4

    1 program: MAIN '(' . ')' '{' commands '}' program_end

    ')'  shift, and go to state 6


State 5

    0 $accept: program $end .

    $default  accept


State 6

    1 program: MAIN '(' ')' . '{' commands '}' program_end

    '{'  shift, and go to state 7


State 7

    1 program: MAIN '(' ')' '{' . commands '}' program_end

    error   shift, and go to state 8
    IF      shift, and go to state 9
    DO      shift, and go to state 10
    WHILE   shift, and go to state 11
    FOR     shift, and go to state 12
    BREAK   shift, and go to state 13
    PRINT   shift, and go to state 14
    RETURN  shift, and go to state 15
    DTYPE   shift, and go to state 16
    ID      shift, and go to state 17
    '{'     shift, and go to state 18
    ';'     shift, and go to state 19

    '}'  reduce using rule 7 (commands)

    commands      go to state 20
    commands1     go to state 21
    command       go to state 22
    cmd           go to state 23
    if_stmt       go to state 24
    for_stmt      go to state 25
    while_stmt    go to state 26
    dowhile_stmt  go to state 27
    attribution   go to state 28


State 8

   23 cmd: error .

    $default  reduce using rule 23 (cmd)


State 9

   24 if_stmt: IF . '(' fsecond ')' '{' commands '}' else_stmt

    '('  shift, and go to state 29


State 10

   37 dowhile_stmt: DO . '{' commands '}' WHILE '(' fsecond ')' ';'

    '{'  shift, and go to state 30


State 11

   36 while_stmt: WHILE . '(' fsecond ')' '{' commands '}'

    '('  shift, and go to state 31


State 12

   27 for_stmt: FOR . '(' ffirst ';' fsecond ';' fthird ')' '{' commands '}'

    '('  shift, and go to state 32


State 13

   20 cmd: BREAK .

    $default  reduce using rule 20 (cmd)


State 14

   19 cmd: PRINT . STRING

    STRING  shift, and go to state 33


State 15

   21 cmd: RETURN .

    $default  reduce using rule 21 (cmd)


State 16

   14 command: DTYPE . declarations ';'

    error  shift, and go to state 34
    ID     shift, and go to state 35

    declarations  go to state 36
    decl          go to state 37
    attribution   go to state 38


State 17

   43 attribution: ID . '=' expr

    '='  shift, and go to state 39


State 18

    9 commands1: '{' . commands '}'

    error   shift, and go to state 8
    IF      shift, and go to state 9
    DO      shift, and go to state 10
    WHILE   shift, and go to state 11
    FOR     shift, and go to state 12
    BREAK   shift, and go to state 13
    PRINT   shift, and go to state 14
    RETURN  shift, and go to state 15
    DTYPE   shift, and go to state 16
    ID      shift, and go to state 17
    '{'     shift, and go to state 18
    ';'     shift, and go to state 19

    '}'  reduce using rule 7 (commands)

    commands      go to state 40
    commands1     go to state 21
    command       go to state 22
    cmd           go to state 23
    if_stmt       go to state 24
    for_stmt      go to state 25
    while_stmt    go to state 26
    dowhile_stmt  go to state 27
    attribution   go to state 28


State 19

   12 commands1: ';' .

    $default  reduce using rule 12 (commands1)


State 20

    1 program: MAIN '(' ')' '{' commands . '}' program_end

    '}'  shift, and go to state 41


State 21

    8 commands: commands1 .
   10 commands1: commands1 . command

    error   shift, and go to state 8
    IF      shift, and go to state 9
    DO      shift, and go to state 10
    WHILE   shift, and go to state 11
    FOR     shift, and go to state 12
    BREAK   shift, and go to state 13
    PRINT   shift, and go to state 14
    RETURN  shift, and go to state 15
    DTYPE   shift, and go to state 16
    ID      shift, and go to state 17

    '}'  reduce using rule 8 (commands)

    command       go to state 42
    cmd           go to state 23
    if_stmt       go to state 24
    for_stmt      go to state 25
    while_stmt    go to state 26
    dowhile_stmt  go to state 27
    attribution   go to state 28


State 22

   11 commands1: command .

    $default  reduce using rule 11 (commands1)


State 23

   13 command: cmd . ';'

    ';'  shift, and go to state 43


State 24

   15 command: if_stmt .

    $default  reduce using rule 15 (command)


State 25

   16 command: for_stmt .

    $default  reduce using rule 16 (command)


State 26

   17 command: while_stmt .

    $default  reduce using rule 17 (command)


State 27

   18 command: dowhile_stmt .

    $default  reduce using rule 18 (command)


State 28

   22 cmd: attribution .

    $default  reduce using rule 22 (cmd)


State 29

   24 if_stmt: IF '(' . fsecond ')' '{' commands '}' else_stmt

    error   shift, and go to state 44
    NUMBER  shift, and go to state 45
    ID      shift, and go to state 46
    UNLOP   shift, and go to state 47
    '('     shift, and go to state 48

    ')'  reduce using rule 30 (fsecond)

    fsecond  go to state 49
    expr     go to state 50
    binlop   go to state 51
    binmop   go to state 52


State 30

   37 dowhile_stmt: DO '{' . commands '}' WHILE '(' fsecond ')' ';'

    error   shift, and go to state 8
    IF      shift, and go to state 9
    DO      shift, and go to state 10
    WHILE   shift, and go to state 11
    FOR     shift, and go to state 12
    BREAK   shift, and go to state 13
    PRINT   shift, and go to state 14
    RETURN  shift, and go to state 15
    DTYPE   shift, and go to state 16
    ID      shift, and go to state 17
    '{'     shift, and go to state 18
    ';'     shift, and go to state 19

    '}'  reduce using rule 7 (commands)

    commands      go to state 53
    commands1     go to state 21
    command       go to state 22
    cmd           go to state 23
    if_stmt       go to state 24
    for_stmt      go to state 25
    while_stmt    go to state 26
    dowhile_stmt  go to state 27
    attribution   go to state 28


State 31

   36 while_stmt: WHILE '(' . fsecond ')' '{' commands '}'

    error   shift, and go to state 44
    NUMBER  shift, and go to state 45
    ID      shift, and go to state 46
    UNLOP   shift, and go to state 47
    '('     shift, and go to state 48

    ')'  reduce using rule 30 (fsecond)

    fsecond  go to state 54
    expr     go to state 50
    binlop   go to state 51
    binmop   go to state 52


State 32

   27 for_stmt: FOR '(' . ffirst ';' fsecond ';' fthird ')' '{' commands '}'

    error  shift, and go to state 34
    ID     shift, and go to state 35

    ';'  reduce using rule 28 (ffirst)

    ffirst        go to state 55
    declarations  go to state 56
    decl          go to state 37
    attribution   go to state 38


State 33

   19 cmd: PRINT STRING .

    $default  reduce using rule 19 (cmd)


State 34

   42 decl: error .

    $default  reduce using rule 42 (decl)


State 35

   40 decl: ID .
   43 attribution: ID . '=' expr

    '='  shift, and go to state 39

    $default  reduce using rule 40 (decl)


State 36

   14 command: DTYPE declarations . ';'
   38 declarations: declarations . ',' decl

    ';'  shift, and go to state 57
    ','  shift, and go to state 58


State 37

   39 declarations: decl .

    $default  reduce using rule 39 (declarations)


State 38

   41 decl: attribution .

    $default  reduce using rule 41 (decl)


State 39

   43 attribution: ID '=' . expr

    error   shift, and go to state 44
    NUMBER  shift, and go to state 45
    ID      shift, and go to state 46
    UNLOP   shift, and go to state 47
    '('     shift, and go to state 48

    expr    go to state 59
    binlop  go to state 60
    binmop  go to state 52


State 40

    9 commands1: '{' commands . '}'

    '}'  shift, and go to state 61


State 41

    1 program: MAIN '(' ')' '{' commands '}' . program_end

    error  shift, and go to state 62
    ID     shift, and go to state 63

    $end  reduce using rule 3 (program_end)

    program_end   go to state 64
    program_end1  go to state 65


State 42

   10 commands1: commands1 command .

    $default  reduce using rule 10 (commands1)


State 43

   13 command: cmd ';' .

    $default  reduce using rule 13 (command)


State 44

   50 expr: error .

    $default  reduce using rule 50 (expr)


State 45

   49 expr: NUMBER .

    $default  reduce using rule 49 (expr)


State 46

   48 expr: ID .

    $default  reduce using rule 48 (expr)


State 47

   47 expr: UNLOP . expr

    error   shift, and go to state 44
    NUMBER  shift, and go to state 45
    ID      shift, and go to state 46
    UNLOP   shift, and go to state 47
    '('     shift, and go to state 48

    expr    go to state 66
    binlop  go to state 60
    binmop  go to state 52


State 48

   46 expr: '(' . expr ')'

    error   shift, and go to state 44
    NUMBER  shift, and go to state 45
    ID      shift, and go to state 46
    UNLOP   shift, and go to state 47
    '('     shift, and go to state 48

    expr    go to state 67
    binlop  go to state 60
    binmop  go to state 52


State 49

   24 if_stmt: IF '(' fsecond . ')' '{' commands '}' else_stmt

    ')'  shift, and go to state 68


State 50

   51 binlop: expr . BINLOP expr
   52 binmop: expr . MATHOP expr

    BINLOP  shift, and go to state 69
    MATHOP  shift, and go to state 70


State 51

   31 fsecond: binlop .
   44 expr: binlop .

    BINLOP    reduce using rule 44 (expr)
    MATHOP    reduce using rule 44 (expr)
    $default  reduce using rule 31 (fsecond)


State 52

   45 expr: binmop .

    $default  reduce using rule 45 (expr)


State 53

   37 dowhile_stmt: DO '{' commands . '}' WHILE '(' fsecond ')' ';'

    '}'  shift, and go to state 71


State 54

   36 while_stmt: WHILE '(' fsecond . ')' '{' commands '}'

    ')'  shift, and go to state 72


State 55

   27 for_stmt: FOR '(' ffirst . ';' fsecond ';' fthird ')' '{' commands '}'

    ';'  shift, and go to state 73


State 56

   29 ffirst: declarations .
   38 declarations: declarations . ',' decl

    ','  shift, and go to state 58

    $default  reduce using rule 29 (ffirst)


State 57

   14 command: DTYPE declarations ';' .

    $default  reduce using rule 14 (command)


State 58

   38 declarations: declarations ',' . decl

    error  shift, and go to state 34
    ID     shift, and go to state 35

    decl         go to state 74
    attribution  go to state 38


State 59

   43 attribution: ID '=' expr .
   51 binlop: expr . BINLOP expr
   52 binmop: expr . MATHOP expr

    BINLOP  shift, and go to state 69
    MATHOP  shift, and go to state 70

    $default  reduce using rule 43 (attribution)


State 60

   44 expr: binlop .

    $default  reduce using rule 44 (expr)


State 61

    9 commands1: '{' commands '}' .

    $default  reduce using rule 9 (commands1)


State 62

    6 program_end1: error .

    $default  reduce using rule 6 (program_end1)


State 63

    5 program_end1: ID . '(' ')' '{' commands '}' program_end1

    '('  shift, and go to state 75


State 64

    1 program: MAIN '(' ')' '{' commands '}' program_end .

    $default  reduce using rule 1 (program)


State 65

    4 program_end: program_end1 .

    $default  reduce using rule 4 (program_end)


State 66

   47 expr: UNLOP expr .
   51 binlop: expr . BINLOP expr
   52 binmop: expr . MATHOP expr

    BINLOP  shift, and go to state 69
    MATHOP  shift, and go to state 70

    $default  reduce using rule 47 (expr)


State 67

   46 expr: '(' expr . ')'
   51 binlop: expr . BINLOP expr
   52 binmop: expr . MATHOP expr

    BINLOP  shift, and go to state 69
    MATHOP  shift, and go to state 70
    ')'     shift, and go to state 76


State 68

   24 if_stmt: IF '(' fsecond ')' . '{' commands '}' else_stmt

    '{'  shift, and go to state 77


State 69

   51 binlop: expr BINLOP . expr

    error   shift, and go to state 44
    NUMBER  shift, and go to state 45
    ID      shift, and go to state 46
    UNLOP   shift, and go to state 47
    '('     shift, and go to state 48

    expr    go to state 78
    binlop  go to state 60
    binmop  go to state 52


State 70

   52 binmop: expr MATHOP . expr

    error   shift, and go to state 44
    NUMBER  shift, and go to state 45
    ID      shift, and go to state 46
    UNLOP   shift, and go to state 47
    '('     shift, and go to state 48

    expr    go to state 79
    binlop  go to state 60
    binmop  go to state 52


State 71

   37 dowhile_stmt: DO '{' commands '}' . WHILE '(' fsecond ')' ';'

    WHILE  shift, and go to state 80


State 72

   36 while_stmt: WHILE '(' fsecond ')' . '{' commands '}'

    '{'  shift, and go to state 81


State 73

   27 for_stmt: FOR '(' ffirst ';' . fsecond ';' fthird ')' '{' commands '}'

    error   shift, and go to state 44
    NUMBER  shift, and go to state 45
    ID      shift, and go to state 46
    UNLOP   shift, and go to state 47
    '('     shift, and go to state 48

    ';'  reduce using rule 30 (fsecond)

    fsecond  go to state 82
    expr     go to state 50
    binlop   go to state 51
    binmop   go to state 52


State 74

   38 declarations: declarations ',' decl .

    $default  reduce using rule 38 (declarations)


State 75

    5 program_end1: ID '(' . ')' '{' commands '}' program_end1

    ')'  shift, and go to state 83


State 76

   46 expr: '(' expr ')' .

    $default  reduce using rule 46 (expr)


State 77

   24 if_stmt: IF '(' fsecond ')' '{' . commands '}' else_stmt

    error   shift, and go to state 8
    IF      shift, and go to state 9
    DO      shift, and go to state 10
    WHILE   shift, and go to state 11
    FOR     shift, and go to state 12
    BREAK   shift, and go to state 13
    PRINT   shift, and go to state 14
    RETURN  shift, and go to state 15
    DTYPE   shift, and go to state 16
    ID      shift, and go to state 17
    '{'     shift, and go to state 18
    ';'     shift, and go to state 19

    '}'  reduce using rule 7 (commands)

    commands      go to state 84
    commands1     go to state 21
    command       go to state 22
    cmd           go to state 23
    if_stmt       go to state 24
    for_stmt      go to state 25
    while_stmt    go to state 26
    dowhile_stmt  go to state 27
    attribution   go to state 28


State 78

   51 binlop: expr . BINLOP expr
   51       | expr BINLOP expr .
   52 binmop: expr . MATHOP expr

    MATHOP  shift, and go to state 70

    $default  reduce using rule 51 (binlop)


State 79

   51 binlop: expr . BINLOP expr
   52 binmop: expr . MATHOP expr
   52       | expr MATHOP expr .

    $default  reduce using rule 52 (binmop)


State 80

   37 dowhile_stmt: DO '{' commands '}' WHILE . '(' fsecond ')' ';'

    '('  shift, and go to state 85


State 81

   36 while_stmt: WHILE '(' fsecond ')' '{' . commands '}'

    error   shift, and go to state 8
    IF      shift, and go to state 9
    DO      shift, and go to state 10
    WHILE   shift, and go to state 11
    FOR     shift, and go to state 12
    BREAK   shift, and go to state 13
    PRINT   shift, and go to state 14
    RETURN  shift, and go to state 15
    DTYPE   shift, and go to state 16
    ID      shift, and go to state 17
    '{'     shift, and go to state 18
    ';'     shift, and go to state 19

    '}'  reduce using rule 7 (commands)

    commands      go to state 86
    commands1     go to state 21
    command       go to state 22
    cmd           go to state 23
    if_stmt       go to state 24
    for_stmt      go to state 25
    while_stmt    go to state 26
    dowhile_stmt  go to state 27
    attribution   go to state 28


State 82

   27 for_stmt: FOR '(' ffirst ';' fsecond . ';' fthird ')' '{' commands '}'

    ';'  shift, and go to state 87


State 83

    5 program_end1: ID '(' ')' . '{' commands '}' program_end1

    '{'  shift, and go to state 88


State 84

   24 if_stmt: IF '(' fsecond ')' '{' commands . '}' else_stmt

    '}'  shift, and go to state 89


State 85

   37 dowhile_stmt: DO '{' commands '}' WHILE '(' . fsecond ')' ';'

    error   shift, and go to state 44
    NUMBER  shift, and go to state 45
    ID      shift, and go to state 46
    UNLOP   shift, and go to state 47
    '('     shift, and go to state 48

    ')'  reduce using rule 30 (fsecond)

    fsecond  go to state 90
    expr     go to state 50
    binlop   go to state 51
    binmop   go to state 52


State 86

   36 while_stmt: WHILE '(' fsecond ')' '{' commands . '}'

    '}'  shift, and go to state 91


State 87

   27 for_stmt: FOR '(' ffirst ';' fsecond ';' . fthird ')' '{' commands '}'

    error   shift, and go to state 8
    BREAK   shift, and go to state 13
    PRINT   shift, and go to state 14
    RETURN  shift, and go to state 15
    ID      shift, and go to state 17

    ')'  reduce using rule 32 (fthird)

    cmd          go to state 92
    fthird       go to state 93
    fthird_body  go to state 94
    attribution  go to state 28


State 88

    5 program_end1: ID '(' ')' '{' . commands '}' program_end1

    error   shift, and go to state 8
    IF      shift, and go to state 9
    DO      shift, and go to state 10
    WHILE   shift, and go to state 11
    FOR     shift, and go to state 12
    BREAK   shift, and go to state 13
    PRINT   shift, and go to state 14
    RETURN  shift, and go to state 15
    DTYPE   shift, and go to state 16
    ID      shift, and go to state 17
    '{'     shift, and go to state 18
    ';'     shift, and go to state 19

    '}'  reduce using rule 7 (commands)

    commands      go to state 95
    commands1     go to state 21
    command       go to state 22
    cmd           go to state 23
    if_stmt       go to state 24
    for_stmt      go to state 25
    while_stmt    go to state 26
    dowhile_stmt  go to state 27
    attribution   go to state 28


State 89

   24 if_stmt: IF '(' fsecond ')' '{' commands '}' . else_stmt

    ELSE  shift, and go to state 96

    $default  reduce using rule 25 (else_stmt)

    else_stmt  go to state 97


State 90

   37 dowhile_stmt: DO '{' commands '}' WHILE '(' fsecond . ')' ';'

    ')'  shift, and go to state 98


State 91

   36 while_stmt: WHILE '(' fsecond ')' '{' commands '}' .

    $default  reduce using rule 36 (while_stmt)


State 92

   34 fthird_body: cmd . ',' fthird_body
   35            | cmd .

    ','  shift, and go to state 99

    $default  reduce using rule 35 (fthird_body)


State 93

   27 for_stmt: FOR '(' ffirst ';' fsecond ';' fthird . ')' '{' commands '}'

    ')'  shift, and go to state 100


State 94

   33 fthird: fthird_body .

    $default  reduce using rule 33 (fthird)


State 95

    5 program_end1: ID '(' ')' '{' commands . '}' program_end1

    '}'  shift, and go to state 101


State 96

   26 else_stmt: ELSE . '{' commands '}'

    '{'  shift, and go to state 102


State 97

   24 if_stmt: IF '(' fsecond ')' '{' commands '}' else_stmt .

    $default  reduce using rule 24 (if_stmt)


State 98

   37 dowhile_stmt: DO '{' commands '}' WHILE '(' fsecond ')' . ';'

    ';'  shift, and go to state 103


State 99

   34 fthird_body: cmd ',' . fthird_body

    error   shift, and go to state 8
    BREAK   shift, and go to state 13
    PRINT   shift, and go to state 14
    RETURN  shift, and go to state 15
    ID      shift, and go to state 17

    cmd          go to state 92
    fthird_body  go to state 104
    attribution  go to state 28


State 100

   27 for_stmt: FOR '(' ffirst ';' fsecond ';' fthird ')' . '{' commands '}'

    '{'  shift, and go to state 105


State 101

    5 program_end1: ID '(' ')' '{' commands '}' . program_end1

    error  shift, and go to state 62
    ID     shift, and go to state 63

    program_end1  go to state 106


State 102

   26 else_stmt: ELSE '{' . commands '}'

    error   shift, and go to state 8
    IF      shift, and go to state 9
    DO      shift, and go to state 10
    WHILE   shift, and go to state 11
    FOR     shift, and go to state 12
    BREAK   shift, and go to state 13
    PRINT   shift, and go to state 14
    RETURN  shift, and go to state 15
    DTYPE   shift, and go to state 16
    ID      shift, and go to state 17
    '{'     shift, and go to state 18
    ';'     shift, and go to state 19

    '}'  reduce using rule 7 (commands)

    commands      go to state 107
    commands1     go to state 21
    command       go to state 22
    cmd           go to state 23
    if_stmt       go to state 24
    for_stmt      go to state 25
    while_stmt    go to state 26
    dowhile_stmt  go to state 27
    attribution   go to state 28


State 103

   37 dowhile_stmt: DO '{' commands '}' WHILE '(' fsecond ')' ';' .

    $default  reduce using rule 37 (dowhile_stmt)


State 104

   34 fthird_body: cmd ',' fthird_body .

    $default  reduce using rule 34 (fthird_body)


State 105

   27 for_stmt: FOR '(' ffirst ';' fsecond ';' fthird ')' '{' . commands '}'

    error   shift, and go to state 8
    IF      shift, and go to state 9
    DO      shift, and go to state 10
    WHILE   shift, and go to state 11
    FOR     shift, and go to state 12
    BREAK   shift, and go to state 13
    PRINT   shift, and go to state 14
    RETURN  shift, and go to state 15
    DTYPE   shift, and go to state 16
    ID      shift, and go to state 17
    '{'     shift, and go to state 18
    ';'     shift, and go to state 19

    '}'  reduce using rule 7 (commands)

    commands      go to state 108
    commands1     go to state 21
    command       go to state 22
    cmd           go to state 23
    if_stmt       go to state 24
    for_stmt      go to state 25
    while_stmt    go to state 26
    dowhile_stmt  go to state 27
    attribution   go to state 28


State 106

    5 program_end1: ID '(' ')' '{' commands '}' program_end1 .

    $default  reduce using rule 5 (program_end1)


State 107

   26 else_stmt: ELSE '{' commands . '}'

    '}'  shift, and go to state 109


State 108

   27 for_stmt: FOR '(' ffirst ';' fsecond ';' fthird ')' '{' commands . '}'

    '}'  shift, and go to state 110


State 109

   26 else_stmt: ELSE '{' commands '}' .

    $default  reduce using rule 26 (else_stmt)


State 110

   27 for_stmt: FOR '(' ffirst ';' fsecond ';' fthird ')' '{' commands '}' .

    $default  reduce using rule 27 (for_stmt)
